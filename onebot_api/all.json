{
  "meta": {
    "schema_version": 4,
    "id": "onebot_api",
    "name": "OneBot API",
    "version": "1.1.1",
    "link": "https://github.com/HuajiMUR233/OneBotAPI",
    "authors": [
      "Huaji_MUR233"
    ],
    "dependencies": {
      "mcdreforged": ">=2.0.4"
    },
    "requirements": [
      "websocket-client>=1.2.0",
      "mcdreforged>=2.0.4"
    ],
    "description": {
      "en_us": "OneBot in MCDReforged"
    }
  },
  "plugin": {
    "schema_version": 1,
    "id": "onebot_api",
    "authors": [
      "Huaji_MUR233"
    ],
    "repository": "https://github.com/HuajiMURsMC/OneBotAPI",
    "branch": "master",
    "related_path": ".",
    "labels": [
      "api"
    ],
    "introduction": {
      "en_us": "# OneBot API\n\n> 一个“轻量化”的 OneBot 协议封装\n\n## 使用\n\n### 下载\n\n可在 [Releases](https://github.com/HuajiMUR233/OneBotAPI/releases) 中下载最新稳定版本\n\n也可在 [GitHub Actions](https://github.com/HuajiMUR233/OneBotAPI/actions) 中下载最新版本\n\n### 配置 QQ 机器人\n\n推荐使用 [go-cqhttp](https://github.com/Mrs4s/go-cqhttp) 作为 QQ 机器人\n\n首次生成配置文件时请选择 `正向 WebSocket`\n\n生成完请填写配置文件中的 QQ号 与 密码\n\n**示例**：\n\n```yaml\n# go-cqhttp 默认配置文件\n\naccount: # 账号相关\n  uin: 12345 # QQ账号\n  password: 'ABCDE' # 密码为空时使用扫码登录\n  encrypt: false  # 是否开启密码加密\n  status: 0      # 在线状态 请参考 https://docs.go-cqhttp.org/guide/config.html#在线状态\n  relogin: # 重连设置\n    delay: 3   # 首次重连延迟, 单位秒\n    interval: 3   # 重连间隔\n    max-times: 0  # 最大重连次数, 0为无限制\n\n  # 是否使用服务器下发的新地址进行重连\n  # 注意, 此设置可能导致在海外服务器上连接情况更差\n  use-sso-address: true\n\nheartbeat:\n  # 心跳频率, 单位秒\n  # -1 为关闭心跳\n  interval: -1\n\nmessage:\n  # 上报数据类型\n  # 可选: string,array\n  post-format: string\n  # 是否忽略无效的CQ码, 如果为假将原样发送\n  ignore-invalid-cqcode: false\n  # 是否强制分片发送消息\n  # 分片发送将会带来更快的速度\n  # 但是兼容性会有些问题\n  force-fragment: false\n  # 是否将url分片发送\n  fix-url: false\n  # 下载图片等请求网络代理\n  proxy-rewrite: ''\n  # 是否上报自身消息\n  report-self-message: false\n  # 移除服务端的Reply附带的At\n  remove-reply-at: false\n  # 为Reply附加更多信息\n  extra-reply-data: false\n  # 跳过 Mime 扫描, 忽略错误数据\n  skip-mime-scan: false\n\noutput:\n  # 日志等级 trace,debug,info,warn,error\n  log-level: warn\n  # 日志时效 单位天. 超过这个时间之前的日志将会被自动删除. 设置为 0 表示永久保留.\n  log-aging: 15\n  # 是否在每次启动时强制创建全新的文件储存日志. 为 false 的情况下将会在上次启动时创建的日志文件续写\n  log-force-new: true\n  # 是否启用 DEBUG\n  debug: false # 开启调试模式\n\n# 默认中间件锚点\ndefault-middlewares: &default\n  # 访问密钥, 强烈推荐在公网的服务器设置\n  access-token: ''\n  # 事件过滤器文件目录\n  filter: ''\n  # API限速设置\n  # 该设置为全局生效\n  # 原 cqhttp 虽然启用了 rate_limit 后缀, 但是基本没插件适配\n  # 目前该限速设置为令牌桶算法, 请参考:\n  # https://baike.baidu.com/item/%E4%BB%A4%E7%89%8C%E6%A1%B6%E7%AE%97%E6%B3%95/6597000?fr=aladdin\n  rate-limit:\n    enabled: false # 是否启用限速\n    frequency: 1  # 令牌回复频率, 单位秒\n    bucket: 1     # 令牌桶大小\n\ndatabase: # 数据库相关设置\n  leveldb:\n    # 是否启用内置leveldb数据库\n    # 启用将会增加10-20MB的内存占用和一定的磁盘空间\n    # 关闭将无法使用 撤回 回复 get_msg 等上下文相关功能\n    enable: true\n\n# 连接服务列表\nservers:\n  # 添加方式，同一连接方式可添加多个，具体配置说明请查看文档\n  #- http: # http 通信\n  #- ws:   # 正向 Websocket\n  #- ws-reverse: # 反向 Websocket\n  #- pprof: #性能分析服务器\n  # 正向WS设置\n  - ws:\n      # 正向WS服务器监听地址\n      host: 127.0.0.1\n      # 正向WS服务器监听端口\n      port: 6700\n      middlewares:\n        <<: *default # 引用默认中间件\n\n```\n\n---\n\n## 指令\n\n`!!ob reload` 重载 OneBot API 插件\n\n---\n\n## 配置文件\n\n**url**\n\nOneBot 实现 的 正向 WebSocket 监听地址与端口\n\n默认：`ws://127.0.0.1:6700`\n\n---\n\n## 开发\n\n请查看 [开发文档](https://github.com/HuajiMURsMC/OneBotAPI/tree/master/./Develop.md)\n\n"
    },
    "introduction_urls": {
      "en_us": "https://raw.githubusercontent.com/HuajiMURsMC/OneBotAPI/master/README.md"
    }
  },
  "release": {
    "schema_version": 8,
    "id": "onebot_api",
    "latest_version": "1.1.1",
    "latest_version_index": 0,
    "releases": [
      {
        "url": "https://github.com/HuajiMURsMC/OneBotAPI/releases/tag/1.1.1",
        "name": "1.1.1",
        "tag_name": "1.1.1",
        "created_at": "2022-11-16T12:59:49Z",
        "description": "只是补个忘记了的更新",
        "prerelease": false,
        "asset": {
          "id": 84830144,
          "name": "OneBotAPI-v1.1.1.mcdr",
          "size": 3803,
          "download_count": 168,
          "created_at": "2022-11-16T13:02:15Z",
          "browser_download_url": "https://github.com/HuajiMURsMC/OneBotAPI/releases/download/1.1.1/OneBotAPI-v1.1.1.mcdr",
          "hash_md5": "5e0711f9cd46744c7f79e23918143685",
          "hash_sha256": "333582e0d7ff206b56f665a030c21467c293f0557cef5c2bcb27c03c24898d93"
        },
        "meta": {
          "schema_version": 4,
          "id": "onebot_api",
          "name": "OneBot API",
          "version": "1.1.1",
          "link": "https://github.com/HuajiMUR233/OneBotAPI",
          "authors": [
            "Huaji_MUR233"
          ],
          "dependencies": {
            "mcdreforged": ">=2.0.4"
          },
          "requirements": [
            "websocket-client>=1.2.0",
            "mcdreforged>=2.0.4"
          ],
          "description": {
            "en_us": "OneBot in MCDReforged"
          }
        }
      },
      {
        "url": "https://github.com/HuajiMURsMC/OneBotAPI/releases/tag/1.0.1",
        "name": "1.0.1",
        "tag_name": "1.0.1",
        "created_at": "2021-09-06T13:04:52Z",
        "description": "",
        "prerelease": false,
        "asset": {
          "id": 44151666,
          "name": "OneBotAPI-v1.0.1.mcdr",
          "size": 15160,
          "download_count": 1277,
          "created_at": "2021-09-06T13:06:15Z",
          "browser_download_url": "https://github.com/HuajiMURsMC/OneBotAPI/releases/download/1.0.1/OneBotAPI-v1.0.1.mcdr",
          "hash_md5": "cae7b81e85993a50a4109b2ac75ddccd",
          "hash_sha256": "9b8717b27d23463641d4b3420857fdca1e7581a93bb5379e09e57d6bdf3ee6f8"
        },
        "meta": {
          "schema_version": 4,
          "id": "onebot_api",
          "name": "OneBot API",
          "version": "1.0.1",
          "link": "https://github.com/HuajiMUR233/OneBotAPI",
          "authors": [
            "Huaji_MUR233"
          ],
          "dependencies": {
            "mcdreforged": ">=2.0.4"
          },
          "requirements": [
            "websocket-client>=1.2.0",
            "mcdreforged>=2.0.4"
          ],
          "description": {
            "en_us": "OneBot in MCDReforged"
          }
        }
      }
    ]
  },
  "repository": {
    "url": "https://github.com/HuajiMURsMC/OneBotAPI",
    "name": "OneBotAPI",
    "full_name": "HuajiMURsMC/OneBotAPI",
    "html_url": "https://github.com/HuajiMURsMC/OneBotAPI",
    "description": null,
    "archived": false,
    "stargazers_count": 1,
    "watchers_count": 1,
    "forks_count": 0,
    "readme": "# OneBot API\n\n> 一个“轻量化”的 OneBot 协议封装\n\n## 使用\n\n### 下载\n\n可在 [Releases](https://github.com/HuajiMUR233/OneBotAPI/releases) 中下载最新稳定版本\n\n也可在 [GitHub Actions](https://github.com/HuajiMUR233/OneBotAPI/actions) 中下载最新版本\n\n### 配置 QQ 机器人\n\n推荐使用 [go-cqhttp](https://github.com/Mrs4s/go-cqhttp) 作为 QQ 机器人\n\n首次生成配置文件时请选择 `正向 WebSocket`\n\n生成完请填写配置文件中的 QQ号 与 密码\n\n**示例**：\n\n```yaml\n# go-cqhttp 默认配置文件\n\naccount: # 账号相关\n  uin: 12345 # QQ账号\n  password: 'ABCDE' # 密码为空时使用扫码登录\n  encrypt: false  # 是否开启密码加密\n  status: 0      # 在线状态 请参考 https://docs.go-cqhttp.org/guide/config.html#在线状态\n  relogin: # 重连设置\n    delay: 3   # 首次重连延迟, 单位秒\n    interval: 3   # 重连间隔\n    max-times: 0  # 最大重连次数, 0为无限制\n\n  # 是否使用服务器下发的新地址进行重连\n  # 注意, 此设置可能导致在海外服务器上连接情况更差\n  use-sso-address: true\n\nheartbeat:\n  # 心跳频率, 单位秒\n  # -1 为关闭心跳\n  interval: -1\n\nmessage:\n  # 上报数据类型\n  # 可选: string,array\n  post-format: string\n  # 是否忽略无效的CQ码, 如果为假将原样发送\n  ignore-invalid-cqcode: false\n  # 是否强制分片发送消息\n  # 分片发送将会带来更快的速度\n  # 但是兼容性会有些问题\n  force-fragment: false\n  # 是否将url分片发送\n  fix-url: false\n  # 下载图片等请求网络代理\n  proxy-rewrite: ''\n  # 是否上报自身消息\n  report-self-message: false\n  # 移除服务端的Reply附带的At\n  remove-reply-at: false\n  # 为Reply附加更多信息\n  extra-reply-data: false\n  # 跳过 Mime 扫描, 忽略错误数据\n  skip-mime-scan: false\n\noutput:\n  # 日志等级 trace,debug,info,warn,error\n  log-level: warn\n  # 日志时效 单位天. 超过这个时间之前的日志将会被自动删除. 设置为 0 表示永久保留.\n  log-aging: 15\n  # 是否在每次启动时强制创建全新的文件储存日志. 为 false 的情况下将会在上次启动时创建的日志文件续写\n  log-force-new: true\n  # 是否启用 DEBUG\n  debug: false # 开启调试模式\n\n# 默认中间件锚点\ndefault-middlewares: &default\n  # 访问密钥, 强烈推荐在公网的服务器设置\n  access-token: ''\n  # 事件过滤器文件目录\n  filter: ''\n  # API限速设置\n  # 该设置为全局生效\n  # 原 cqhttp 虽然启用了 rate_limit 后缀, 但是基本没插件适配\n  # 目前该限速设置为令牌桶算法, 请参考:\n  # https://baike.baidu.com/item/%E4%BB%A4%E7%89%8C%E6%A1%B6%E7%AE%97%E6%B3%95/6597000?fr=aladdin\n  rate-limit:\n    enabled: false # 是否启用限速\n    frequency: 1  # 令牌回复频率, 单位秒\n    bucket: 1     # 令牌桶大小\n\ndatabase: # 数据库相关设置\n  leveldb:\n    # 是否启用内置leveldb数据库\n    # 启用将会增加10-20MB的内存占用和一定的磁盘空间\n    # 关闭将无法使用 撤回 回复 get_msg 等上下文相关功能\n    enable: true\n\n# 连接服务列表\nservers:\n  # 添加方式，同一连接方式可添加多个，具体配置说明请查看文档\n  #- http: # http 通信\n  #- ws:   # 正向 Websocket\n  #- ws-reverse: # 反向 Websocket\n  #- pprof: #性能分析服务器\n  # 正向WS设置\n  - ws:\n      # 正向WS服务器监听地址\n      host: 127.0.0.1\n      # 正向WS服务器监听端口\n      port: 6700\n      middlewares:\n        <<: *default # 引用默认中间件\n\n```\n\n---\n\n## 指令\n\n`!!ob reload` 重载 OneBot API 插件\n\n---\n\n## 配置文件\n\n**url**\n\nOneBot 实现 的 正向 WebSocket 监听地址与端口\n\n默认：`ws://127.0.0.1:6700`\n\n---\n\n## 开发\n\n请查看 [开发文档](https://github.com/HuajiMUR233/OneBotAPI/tree/master/./Develop.md)\n\n",
    "readme_url": "https://raw.githubusercontent.com/HuajiMUR233/OneBotAPI/master/README.md",
    "license": {
      "key": "mit",
      "name": "MIT License",
      "spdx_id": "MIT",
      "url": "https://api.github.com/licenses/mit"
    }
  }
}