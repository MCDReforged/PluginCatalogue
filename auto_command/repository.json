{
  "url": "https://github.com/bzyyyyyyyy/MCDR-AutoCommand",
  "name": "MCDR-AutoCommand",
  "full_name": "bzyyyyyyyy/MCDR-AutoCommand",
  "html_url": "https://github.com/bzyyyyyyyy/MCDR-AutoCommand",
  "description": "A plugin that supports assembling commands into stacks and sending them automatically",
  "archived": false,
  "stargazers_count": 3,
  "watchers_count": 3,
  "forks_count": 0,
  "readme": "# MCDR-AutoCommand\n---------\n\n**中文** | [English](https://github.com/bzyyyyyyyy/MCDR-AutoCommand/tree/master/./README_en.md)\n\n一个支持将指令打包成指令堆&自动发送的插件\n\n需要 `v2.1.0` 以上的 [MCDReforged](https://github.com/Fallen-Breath/MCDReforged)\n\n需要 [MinecraftDataAPI](https://github.com/MCDReforged/MinecraftDataAPI/)\n\n代码参考了 Fallen-Breath 的 [QuickBackupM](https://github.com/TISUnion/QuickBackupM)，[TimedQBM](https://github.com/TISUnion/TimedQBM) 和 [LocationMarker](https://github.com/TISUnion/LocationMarker)\n\n## 命令格式说明\n\n`!!ac` 显示帮助信息\n\n`!!ac make <name> <permission> [<comment>]` 创建一个新指令堆\n\n`!!ac stack <name>` 显示`<name>`的信息和其中的所有指令及注释\n\n`!!ac stack <name> add <command>` 在`<name>`的末尾添加一行指令\n\n`!!ac stack <name> before <lineNo.> <command>` 在`<name>`的`<lineNo.>`前添加一行指令\n\n`!!ac stack <name> edit <lineNo.> <command>` 将`<lineNo.>`的指令改为`<command>`\n\n`!!ac stack <name> before [<lineNo.>]` 删除`<name>`中`<lineNo.>`的命令（如果`<lineNo.>`为空，则删除`<name>`中的最后一行指令）\n\n`!!ac stack <name> perm <level>` 将`<name>`的使用权限更改为`<permission>`\n\n`!!ac send <name>` 依次发送`<name>`中的所有指令\n\n`!!ac del <name>` 删除指令堆`<name>`\n\n`!!ac list [<page>]` 显示所有指令堆及注释\n\n`!!ac search <keyword> [<page>]` 搜索指令堆，返回所有匹配项\n\n`!!ac wait <sec>` 等待`<sec>`（可将其添加到指令堆中）\n\n该插件自带两个`<permission>`为`3`的空指令堆`<server_start>`和`<timed_command>`\n\n服务器开启时自动依次发送`<server_start>`中的所有指令\n\n间隔`<minutes>`分钟自动依次发送`<timed_command>`中的所有指令\n\n`!!ac tc` 显示间隔的<分钟>和`<timed_command>`的信息和其中的所有指令及注释\n\n`!!ac tc enable` 启动发送指令定时器\n\n`!!ac tc disable` 关闭发送指令定时器\n\n`!!ac tc set_interval` 设置发送指令定时器的时间间隔，单位分钟\n\n`!!ac tc reset_timer` 重置发送指令定时器\n\n## 配置文件说明\n\n### auto_command\n\n路径：`config/auto_command/auto_command.json`\n\n#### minimum_stack_edit_perm\n\n默认值：`3`\n\n编辑指令堆的最低权限要求\n\n如果该指令堆的使用权限高于编辑权限，则该指令堆的编辑权限等于使用权限\n\n拥有编辑权限的玩家可以：\n\n1. 创建指令堆（指令堆使用权限不可高于该玩家的权限）\n\n2. 编辑指令堆中的指令\n\n3. 更改指令堆的使用权限（更改后的权限不可高于该玩家的权限）\n\n4. 删除指令堆\n\n5. 发送指令堆\n\n#### stack_per_page\n\n默认值：`10`\n\n使用 `!!ac list <page>` 或 `!!ac search <keyword> <page>` 后\n\n每一页显示的指令堆数量\n\n#### time_after_execute\n\n默认值：`0.1`\n\n执行以 `/` 开头的指令后等待的秒数\n\n#### timed_command_interval\n\n默认值：`30.0`\n\n发送指令定时器的时间间隔，单位分钟\n\n#### timed_command_enabled\n\n默认值：`true`\n\n是否启用发送指令定时器\n\n### command_stacks\n\n路径：`config/auto_command/command_stacks.json`\n\n示例：\n\n\n```\n{\n    \"难度和平\": {\n        \"desc\": \"将难度更改为和平\",\n        \"perm\": 3,\n        \"command\": [\n            \"/difficulty peaceful\",\n            \"成功更改难度为和平\"\n        ]\n    },\n    \"peaceful\": {\n        \"desc\": \"set game difficulty to peaceful\",\n        \"perm\": 3,\n        \"command\":  [\n            \"/difficulty peaceful\",\n            \"set difficulty to peaceful successfully\"\n        ]\n    }\n}\n```\n\n#### desc\n\n默认值：`null`\n\n指令堆的注释\n\n可以使用以 `§` 为前缀的传统样式代码\n如：`这是§b蓝色`\n\n#### perm\n\n范围：0 ~ 4\n\n指令堆的使用权限\n\n#### command\n\n默认值：`[]`\n\n当发送该指令堆时：\n\n如果指令以 `/` 开头，则通过发送到服务端的标准输入流来执行服务端指令\n\n如果指令以 `!!` 开头，则会在MCDR系统中执行该指令（有些插件的指令不会生效）\n\n其他情况则会在游戏中广播该指令\n\n## 内置指令堆\n\n### server_start\n\n默认值：\n\n```\n\"server_start\": {\n        \"desc\": \"服务器开启时发送指令堆\",\n        \"perm\": 3,\n        \"command\": []\n}\n```\n\n### timed_command\n\n默认值：\n\n```\n\"timed_command\": {\n        \"desc\": \"间隔§b30.0§r分钟发送指令堆\",\n        \"perm\": 3,\n        \"command\": []\n}\n```\n\n#### desc\n\n每次更新发送指令定时器的时间间隔时\n\n会同时更新该指令堆的注释\n\n### perm\n\n该指令堆的使用权限也是除 `!!ac tc` 以外的所有 `!!ac tc` 指令的使用权限\n\n## 解释器\n\n### /player `bot` spawn\n\n在玩家发送指令堆时，如果检测到该种指令，将会通过发送指令堆的玩家发送该指令\n\n### /player `bot` spawn here\n\n在编辑指令堆时，如果检测到该指令，会自动将其转换成 /player `bot` spawn at ~ ~ ~ facing ~ ~ in `dim` in `gamemode`\n",
  "readme_url": "https://raw.githubusercontent.com/bzyyyyyyyy/MCDR-AutoCommand/master/README.md",
  "license": {
    "key": "gpl-3.0",
    "name": "GNU General Public License v3.0",
    "spdx_id": "GPL-3.0",
    "url": "https://api.github.com/licenses/gpl-3.0"
  }
}