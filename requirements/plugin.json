{
  "schema_version": 1,
  "id": "requirements",
  "authors": [
    "awaBlack"
  ],
  "repository": "https://github.com/Hi-awaBlack/Requirements-MCDR",
  "branch": "main",
  "related_path": ".",
  "labels": [
    "api"
  ],
  "introduction": {
    "en_us": "Requirements\n--------\n\n[`简体中文`](https://github.com/Hi-awaBlack/Requirements-MCDR/tree/main/README-zh_CN.md) | **English**\n\nMake your MCDReforged plugin free of the need for users to manually install Python packages!\n\n## Features\n\n- Automatically install missing packages\n- Mutable PyPI sources\n- Simple adaptation\n\n## Adaptation\n\nAdaptation is very easy! All it takes is a slight change to your plugin.\n\n### Import\n\n#### Dependency form\n\nIf the Requirements plugin exists in the form of a MCDReforged plugin, it can be imported using the following method:\n\n```python\n# Recommend\nimport requirements\n\n# Not recommended\nrequirements = server.get_plugin_instance('requirements')\n```\n\nPlease be careful to declare dependencies in your plugin's [metadata](https://docs.mcdreforged.com/zh-cn/latest/plugin_dev/metadata.html)!\n\n#### Embedded form\n\nYou can also extract the `/requirement/__init__.py` file in this plugin and insert it into your plug-in to import it in the normal way.\n\n### Use\n\nThe installation of Python packages should be performed in the [`on_load`](https://docs.mcdreforged.com/zh-cn/latest/plugin_dev/event.html#plugin-loaded) event!\n\nThe `install_module` function can install a software package alone and will return a Boolean value representing the installation result, like this:\n\n```python\ndef on_load(server, prev):\n     success = requirements.install_module(server=server, module_name='requests', pypi_source=requirements.PYPI_OFFICIAL_SOURCE)\n     # >                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n     # >                                                                          This part is not required as the same default values exist as in this example. Here's a demonstration of how to customize a PyPI source.\n     if not success:\n         # Try changing the PyPI source and try again\n         # Or throw an exception to exit the program\n         ...\n\n     import requests\n     ...\n```\n\nThe `install_modules` function can install many packages at once and will return a Boolean value representing the installation result, like this:\n\n```python\ndef on_load(server, prev):\n     success = requirements.install_modules(server=server, modules_list=['requests', 'sqlalchemy'])\n     if not success:\n         ...\n\n     import requests\n     import sqlalchemy\n     ...\n```\n\nThe `install_modules_from_file` function allows installing packages via `requirements.txt` and will return a Boolean value representing the installation result, like this:\n\n```python\ndef on_load(server, prev):\n     success = requirements.install_modules_from_file(server=server, file_path='https://raw.githubusercontent.com/MCDReforged/MCDR-bot/master/requirements.txt')\n     # >                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n     # >                                                             Yes, it can be installed directly over the network. You can also use local files, but you need to make sure the path is correct, beware of relative paths!\n     if not success:\n         ...\n\n     import requests\n     import sqlalchemy\n     ...\n```\n\n## Precautions\n\n- The MCDReforged main thread will be blocked during the installation process\n\n## Reference source code\n\n```python\nfrom mcdreforged.api.types import PluginServerInterface\n\nPYPI_OFFICIAL_SOURCE = \"https://pypi.org/simple/\"\n\n\ndef install_module(\n     server: PluginServerInterface,\n     module_name: str,\n     pypi_source: str = PYPI_OFFICIAL_SOURCE,\n) -> bool:\n     ...\n\n\ndef install_modules(\n     server: PluginServerInterface,\n     modules_list: list,\n     pypi_source: str = PYPI_OFFICIAL_SOURCE,\n) -> bool:\n     ...\n\n\ndef install_modules_from_file(\n     server: PluginServerInterface,\n     file_path: str,\n     pypi_source: str = PYPI_OFFICIAL_SOURCE,\n) -> bool:\n     ...\n```\n",
    "zh_cn": "*数据拉取失败*"
  },
  "introduction_urls": {
    "en_us": "https://raw.githubusercontent.com/Hi-awaBlack/Requirements-MCDR/main/README.md",
    "zh_cn": "https://raw.githubusercontent.com/Hi-awaBlack/Requirements-MCDR/main/README_zh-CN.md"
  }
}